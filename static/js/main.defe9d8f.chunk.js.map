{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","findUserById","usersFromServer","find","userId","findNewTodoId","list","numbers","Math","max","App","useState","setTitle","setUserId","isTitleError","setIsTitleError","isUserError","setUserError","newTodos","setNewTodos","action","method","onSubmit","event","preventDefault","trim","prevTodos","type","placeholder","value","onChange","target","length","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.defe9d8f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { email, name } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, title, completed, user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction findUserById(id: number): User | null {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nfunction findNewTodoId(list: Todo[]): number {\n  const numbers = list.map(todo => todo.id);\n\n  return Math.max(...numbers) + 1;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n  const [newTodos, setNewTodos] = useState<Todo[]>(todos);\n\n  const addTodo = (todo: Todo) => {\n    setNewTodos(prevTodos => [...prevTodos, todo]);\n  };\n\n  const clear = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    if (event.target.value.trim().length > 0) {\n      setIsTitleError(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setIsTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n    }\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    addTodo({\n      id: findNewTodoId(newTodos),\n      title,\n      completed: false,\n      userId,\n      user: findUserById(userId),\n    });\n\n    clear();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => {\n                return (\n                  <option value={user.id} key={user.id}>\n                    {user.name}\n                  </option>\n                );\n              })\n            }\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}